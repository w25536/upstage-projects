[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ai-agent-orchestrator"
version = "0.1.0"
description = "AI Agent Orchestrator with MCP integration and LangGraph workflow"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Hackathon Team", email = "team@example.com"},
]
keywords = ["ai", "mcp", "langgraph", "orchestrator", "hackathon"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "aiohttp>=3.9.0",
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "langgraph>=0.0.60",
    "pydantic>=2.0.0",
    "typing-extensions>=4.8.0",
    "mcp>=1.0.0",
    "jinja2>=3.1.0",
    "python-multipart>=0.0.6",
    "python-dotenv>=1.1.1",
    "apscheduler>=3.10.0",
    "pytz>=2023.3",
    "html2image>=2.0.7",
    "openai>=1.10.0",
    "torch>=2.8.0",
    "transformers>=4.56.2",
    "accelerate>=1.10.1",
    "huggingface-hub>=0.35.3",
    "google-auth-oauthlib>=1.2.2",
    "google-auth-httplib2>=0.2.0",
    "google-api-python-client>=2.184.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
]

[project.urls]
Homepage = "https://github.com/HwangJohn/ai-prompt-history-llama"
Documentation = "https://github.com/HwangJohn/ai-prompt-history-llama/tree/feature/hackathon-demo-mockup/docs"
Repository = "https://github.com/HwangJohn/ai-prompt-history-llama.git"
Issues = "https://github.com/HwangJohn/ai-prompt-history-llama/issues"

[project.scripts]
start-demo = "start_demo:main"

[tool.hatch.build.targets.wheel]
packages = ["mcp_server", "agent_orchestrator", "context_registry", "backoffice"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
asyncio_mode = "auto"

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
