---
company: 수협은행
project_name: WebLogic 10g → 12c 업그레이드
migration_date: 2018-06
from_tech: WebLogic Server 10.3.6
to_tech: WebLogic Server 12c (12.2.1)
team: 채널시스템팀
duration: 6개월
considerations: |
  1. 운영 중단 최소화 (야간 작업)
  2. 애플리케이션 호환성 검증 (50개 애플리케이션)
  3. JDK 1.6 → 1.8 동시 업그레이드
  4. 클러스터 구성 재설계 (4대 → 6대)
  5. 라이선스 비용 증가 (연 2억)
challenges: |
  - 레거시 애플리케이션 호환성 이슈 (Struts 1.x)
  - 배포 스크립트 전면 수정 필요
  - 운영팀 교육 (3주 소요)
  - 데이터소스 설정 변경 (JNDI 이름 규칙 변경)
results: |
  - 성능 20% 향상 (응답시간 1.5초 → 1.2초)
  - 메모리 관리 개선 (GC 빈도 감소)
  - 보안 패치 최신화
  - 단, 초기 안정화 기간 3개월 소요
contact_person: 김영수
contact_email: kim.ys@suhyup-bank.com
---
company: 수협은행
project_name: Oracle 10g → 11g 업그레이드
migration_date: 2015-03
from_tech: Oracle Database 10g R2
to_tech: Oracle Database 11g R2
team: 계정계시스템팀
duration: 12개월 (계획 수립 포함)
considerations: |
  1. 대용량 데이터 마이그레이션 (2TB)
  2. 애플리케이션 SQL 호환성 검증 (10만 라인)
  3. 운영 중단 시간 최소화 (주말 작업)
  4. 백업 및 롤백 계획 수립
  5. DBA 역량 강화 (Oracle 교육 3개월)
challenges: |
  - 옵티마이저 변경으로 실행 계획 변경
  - 일부 SQL 성능 저하 (힌트 추가 필요)
  - Pro*C 프로그램 재컴파일
  - 파티션 테이블 재생성
results: |
  - 배치 처리 시간 20% 단축 (5시간 → 4시간)
  - 쿼리 성능 평균 30% 향상
  - 단, 초기 SQL 튜닝 작업 3개월 소요
  - 안정화까지 6개월
contact_person: 이성호
contact_email: lee.sh@suhyup-bank.com
---
company: 농협은행
project_name: Cobol → Java 전환 (일부 기능)
migration_date: 2023-09
from_tech: Cobol (MicroFocus) + CICS
to_tech: Java 8 + Spring 4.3 + Oracle
team: 계정계개발팀
duration: 24개월 (1차 PoC)
considerations: |
  1. 메인프레임 의존도 낮추기
  2. Cobol 개발자 수급 어려움 해소
  3. 단계적 전환 (비핵심 기능부터)
  4. 성능 저하 방지 (TPS 유지)
  5. 양방향 호환 인터페이스 구축
challenges: |
  - Cobol 비즈니스 로직 해석 어려움 (주석 없음)
  - 메인프레임 트랜잭션을 Java로 변환 시 성능 저하
  - 데이터 변환 로직 복잡 (EBCDIC → ASCII)
  - 테스트 케이스 부족 (30년 전 로직)
results: |
  - 1차로 10개 거래 전환 완료
  - 성능은 기존 대비 90% 수준 (개선 중)
  - 유지보수 용이성 향상
  - 전체 전환까지 10년 예상
contact_person: 김철수
contact_email: kim.cs@nhbank.com
---
company: 우리은행
project_name: SVN → Git 마이그레이션
migration_date: 2024-03
from_tech: Subversion (SVN)
to_tech: Git + GitLab
team: 전산운영부
duration: 18개월 (교육 포함)
considerations: |
  1. 300개 리포지토리 전환
  2. 10년치 이력 보존
  3. 브랜치 전략 재정립
  4. 개발자 교육 (200명)
  5. CI/CD 파이프라인 재구축
challenges: |
  - SVN에 익숙한 개발자들의 저항
  - 바이너리 파일 관리 문제 (LFS 도입)
  - 브랜치 병합 충돌 빈번
  - Jenkins 빌드 스크립트 전면 수정
results: |
  - 브랜치 생성/병합 속도 10배 향상
  - 분산 개발 환경 구축
  - 코드 리뷰 프로세스 개선
  - 단, 초기 적응 기간 3개월 소요
contact_person: 윤태현
contact_email: yoon.th@woori.com
---
company: 신한은행
project_name: Struts → Spring MVC 전환
migration_date: 2020-11
from_tech: Struts 2.5
to_tech: Spring MVC 5.2 + Spring Boot 2.3
team: 시스템개발팀
duration: 18개월
considerations: |
  1. 관리자 시스템 30개 전환
  2. Struts Action → Spring Controller 전환
  3. 보안 취약점 해소
  4. RESTful API 표준화
  5. 레거시 JSP 유지 (화면 재개발 부담)
challenges: |
  - Struts 태그 라이브러리 → Spring 태그 변환
  - 인터셉터 로직 재작성
  - 세션 관리 방식 변경
  - 기존 개발자 Spring 교육 필요
results: |
  - 보안 취약점 해소
  - 유지보수 생산성 50% 향상
  - API 표준화로 타 시스템 연동 용이
  - 성능은 기존과 유사
contact_person: 서지훈
contact_email: seo.jh@shinhan.com
---
company: 하나은행
project_name: HP-UX → Linux 전환
migration_date: 2023-06
from_tech: HP-UX 11i v3
to_tech: Red Hat Enterprise Linux 8
team: 전산센터
duration: 24개월 (단계적 전환)
considerations: |
  1. 유닉스 명령어 차이 (HP-UX → Linux)
  2. 컴파일러 변경 (HP C → GCC)
  3. 파일 시스템 차이 (VxFS → XFS)
  4. 애플리케이션 재컴파일
  5. 운영 스크립트 전면 수정
challenges: |
  - 바이너리 호환성 없음 (전체 재컴파일)
  - 일부 유닉스 시스템 콜 변경
  - 성능 차이 (일부 배치 느려짐)
  - 운영팀 리눅스 교육 필요
results: |
  - 라이선스 비용 절감 (연 5억)
  - 하드웨어 유연성 확보 (x86 서버)
  - 오픈소스 생태계 활용 가능
  - 단, 안정화까지 1년 소요
contact_person: 강희정
contact_email: kang.hj@hana.com
---
company: KB국민은행
project_name: jQuery → React 전환 (모바일웹)
migration_date: 2023-01 (진행 중)
from_tech: jQuery 1.12 + JSP
to_tech: React 18 + TypeScript + Next.js
team: 모바일뱅킹팀
duration: 24개월 (2년 계획, 50% 완료)
considerations: |
  1. 단계적 전환 (페이지별)
  2. 하이브리드 운영 (jQuery + React 공존)
  3. IE11 지원 중단 공지
  4. SEO 최적화 (Next.js SSR)
  5. 개발자 React 교육 (6개월)
challenges: |
  - jQuery 플러그인 의존성 제거
  - JSP → React 컴포넌트 전환 작업량 방대
  - 레거시 API 인터페이스 호환성
  - 빌드 시간 증가 (Webpack)
results: |
  - 전환 완료 페이지 로딩 속도 60% 향상
  - 개발 생산성 30% 향상 (컴포넌트 재사용)
  - 사용자 경험 개선 (반응 속도)
  - 단, 전체 전환까지 1년 더 필요
contact_person: 노은주
contact_email: noh.ej@kbstar.com
---
company: 신한은행
project_name: On-Premise → AWS 클라우드 전환 (일부)
migration_date: 2024-09 (진행 중)
from_tech: On-Premise 물리 서버
to_tech: AWS (EC2, RDS, S3)
team: 인프라운영팀
duration: 36개월 (단계적, 비핵심부터)
considerations: |
  1. 금융권 클라우드 규제 준수
  2. 보안 요구사항 충족
  3. 비용 산정 (TCO 분석)
  4. 네트워크 연동 (전용선)
  5. DR 구성
challenges: |
  - 금융권 클라우드 이용 가이드 준수
  - 개인정보 처리 시스템 클라우드 제약
  - 네트워크 지연 (10ms → 30ms)
  - 기존 인프라팀의 클라우드 역량 부족
results: |
  - 개발/테스트 환경 클라우드 전환 완료
  - 인프라 프로비저닝 시간 단축 (2주 → 1일)
  - 운영 비용 절감 효과 미미 (초기)
  - 핵심 계정계는 On-Premise 유지
contact_person: 임채윤
contact_email: lim.cy@shinhan.com
---
